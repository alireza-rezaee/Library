@using Microsoft.AspNetCore.Identity
@using Mohkazv.Library.WebApp.Helpers
@using Mohkazv.Library.WebApp.Areas.Identity.Data 
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
}
@addTagHelper *, AlirezaRezaee.PersonalNotes.WeblogApp

<li class="d-block">
    <a asp-route="SiteIndex" class="p-2" style="line-height: 0;">
        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-house" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M2 13.5V7h1v6.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V7h1v6.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5zm11-11V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z" />
            <path fill-rule="evenodd" d="M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z" />
        </svg>
    </a>
</li>
@if (User.IsInRole(Roles.MessageDelete) || User.IsInRole(Roles.MessagesList) || User.IsInRole(Roles.MessagesSetReadOrNot) || User.IsInRole(Roles.Personalize)
    || User.IsInRole(Roles.RoleCreate) || User.IsInRole(Roles.RoleDelete) || User.IsInRole(Roles.RoleEdit) || User.IsInRole(Roles.RolesList) || User.IsInRole(Roles.UserCreate)
    || User.IsInRole(Roles.UserDelete) || User.IsInRole(Roles.UserDetails) || User.IsInRole(Roles.UserEdit) || User.IsInRole(Roles.UserRoleAssign) || User.IsInRole(Roles.UserRolesList)
    || User.IsInRole(Roles.UserRoleUnassign) || User.IsInRole(Roles.UsersList))
{
    //Write new
    <li class="d-block">
        <a asp-action="Management" asp-controller="Home" class="p-2" style="line-height: 0;">
            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-columns-gap" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M6 1H1v3h5V1zM1 0a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1H1zm14 12h-5v3h5v-3zm-5-1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-5zM6 8H1v7h5V8zM1 7a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1H1zm14-6h-5v7h5V1zm-5-1a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1h-5z" />
            </svg>
        </a>
    </li>
}
@if (SignInManager.IsSignedIn(User))
{
    //Avatar
    var avatar = (await UserManager.GetUserAsync(User)).ProfileImagePath;
    <li class="d-none d-sm-block ">
        <a asp-area="Identity" asp-page="/account/manage/index" class="p-1" style="line-height:0;">


            @if (string.IsNullOrEmpty(avatar))
            {
                <img-gravatar gravatar-size="35" gravatar-email="@await UserManager.GetEmailAsync(user)" alt="" class="rounded-circle img-fluid"></img-gravatar>
            }
            else
            {
                <img alt="" class="rounded-circle img-fluid" src="@avatar" style="height: 35px !important; width: 35px !important;">
            }
        </a>
    </li>
}
else
{
    <li class="d-none d-sm-block ">
        <a asp-area="Identity" asp-page="/account/login" class="p-2" style="line-height:0;">
            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-lock" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M11.5 8h-7a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1zm-7-1a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-7zm0-3a3.5 3.5 0 1 1 7 0v3h-1V4a2.5 2.5 0 0 0-5 0v3h-1V4z" />
            </svg>
        </a>
    </li>
}
